<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmily.rabbitmq.rabbitmqcommon.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
    <constructor >
      <idArg column="message_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="message" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="try_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="next_retry" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="BaseAndFailResultMap" type="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
      <id property="messageId" column="message_id"/>
	  <result property="type" column="type"/>
	  <result property="message" column="message"/>
	  <result property="tryCount" column="try_count"/>
	  <result property="status" column="status"/>
	  <result property="nextRetry" column="next_retry"/>
	  <result property="createTime" column="create_time"/>
	  <result property="updateTime" column="update_time"/>
      <association property="messageFailed" column="message_id" select="com.hmily.rabbitmq.rabbitmqcommon.mapper.MessageFailedMapper.selectByMsgId"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    message_id, type, message, try_count, status, next_retry, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_mq_message_log
    where message_id = #{messageId,jdbcType=BIGINT}
  </select>queryAll
   <select id="selectFail" resultMap="BaseAndFailResultMap" parameterType="java.lang.Integer">
   		select * from t_mq_message_log l, t_mq_message_failed f
   			where l.message_id = f.message_id and l.status = #{status,jdbcType=INTEGER}
   </select>
   
   <select id="selectFail" resultMap="BaseAndFailResultMap">
   		select * from t_mq_message_log l, t_mq_message_failed f
   			where l.message_id = f.message_id order by create_time desc
   </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_mq_message_log
    where message_id = #{messageId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
    insert into t_mq_message_log (message_id, type, message, 
      try_count, status, next_retry, 
      create_time, update_time)
    values (#{messageId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      #{tryCount,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{nextRetry,jdbcType=TIMESTAMP}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
    insert into t_mq_message_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="tryCount != null" >
        try_count,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="nextRetry != null" >
        next_retry,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null" >
        #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="nextRetry != null" >
        #{nextRetry,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
    update t_mq_message_log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null" >
        try_count = #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="nextRetry != null" >
        next_retry = #{nextRetry,jdbcType=TIMESTAMP},
      </if>
      <!-- <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if> -->
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hmily.rabbitmq.rabbitmqcommon.entity.Message" >
    update t_mq_message_log
    set type = #{type,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      try_count = #{tryCount,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      next_retry = #{nextRetry,jdbcType=TIMESTAMP},
      update_time = now()
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
  
  <update id="updateTryCount" parameterType="com.hmily.rabbitmq.rabbitmqcommon.entity.Message">
  	update t_mq_message_log 
  		set try_count = try_count+1,
  			next_retry = #{nextRetry,jdbcType=TIMESTAMP},
  			update_time = now() 
  		where message_id = #{messageId,jdbcType=BIGINT}
  </update>

    <update id="changeMessageStatus" >
        update t_mq_message_log bml set bml.status = #{status, jdbcType=INTEGER}, bml.update_time = now()
          where bml.message_id = #{messageId,jdbcType=BIGINT}
    </update>

    <update id="updataNextRetryTimeForNow">
        update t_mq_message_log m set m.next_retry = now(),  m.update_time = now() where m.message_id = #{messageId,jdbcType=BIGINT}
    </update>

    <select id="getNotProcessingInByType" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
          from t_mq_message_log m
          where m.type = #{type, jdbcType=INTEGER}
       			<if test="maxTryCount != null">
       				<![CDATA[
       					and m.try_count <= #{maxTryCount,jdbcType=INTEGER}
       				]]>
       			</if>
                 <if test="status != null">
                 	and m.status in 
                 	<foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				        #{item}
				    </foreach>
                 </if>
                 <![CDATA[
				    and m.next_retry <= now()
				  ]]>
    </select>
</mapper>